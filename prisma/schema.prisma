generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fname         String
  lname         String
  email         String?         @unique
  image         String?
  role          UserRole        @default(User)
  gender        Gender?
  age           Int?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  address       String?
  clerkId       String          @unique
  OrganizerUser OrganizerUser[]
}

model Category {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String   @unique
  categoryDescription String?
  imageUrl            String[]
  Event               Event[]
}

model Event {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  eventDescription String
  location         String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  startTime        DateTime
  endTime          DateTime
  imageUrl         String[]
  price            String
  isFree           Boolean    @default(false)
  url              String
  categoryId       String     @db.Uuid
  type             EventType
  Category         Category   @relation(fields: [categoryId], references: [id])
  Organizer        Organizer? @relation(fields: [organizerId], references: [id])
  organizerId      String    @db.Uuid
}

model Organizer {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizationName String?
  OrganizerUsers   OrganizerUser[]
  Event            Event[]
}

model OrganizerUser {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organizerId String        @db.Uuid
  userId      String        @db.Uuid
  role        OrganizerRole

  Organizer Organizer @relation(fields: [organizerId], references: [id])
  User      User      @relation(fields: [userId], references: [id])

  @@unique([organizerId, userId]) // Prevent duplicate organizer-user assignments
}

enum OrganizerRole {
  Owner
  CoOrganizer
  Staff
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum UserRole {
  Admin
  User
  Organizer
}

enum EventType {
  Physical
  Virtual
}
