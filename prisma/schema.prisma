generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  fname     String
  lname     String
  email     String?     @unique
  image     String?
  role      UserRole    @default(User)
  gender    Gender?
  age       Int?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  address   String?
  clerkId   String      @unique
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  Organizer Organizer[]
}

model Category {
  id                  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String  @unique
  categoryDescription String?
  imageUrl            String[]
  Event               Event[]
}

model Event {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String
  eventDescription String
  location         String?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  startTime        DateTime
  endTime          DateTime
  imageUrl         String[]
  price            String
  isFree           Boolean     @default(false)
  url              String
  categoryId       String      @db.Uuid
  type             EventType
  Category         Category    @relation(fields: [categoryId], references: [id])
  Organizer        Organizer[]
}

model Organizer {
  id               String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId           String  @db.Uuid
  organizationName String?
  eventId          String  @db.Uuid
  Event            Event   @relation(fields: [eventId], references: [id])
  User             User    @relation(fields: [userId], references: [id])
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum UserRole {
  Admin
  User
  Organizer
}

enum EventType {
  Physical
  Virtual
}
